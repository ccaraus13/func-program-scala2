[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\coca1805\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\coca1805\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.6 (Oracle Corporation Java 17.0.8)
[debug]       Load.loadUnit: plugins took 66.2508ms
[debug]       Load.loadUnit: defsScala took 0.1548ms
[debug] [Loading] Scanning directory C:\Users\coca1805\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\coca1805\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.6777 ms
[debug]           Load.resolveProject(global-plugins) took 22.984ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\coca1805\.sbt\1.0\plugins, plugins: List(<none>))) took 50.0329ms
[debug] [Loading] Done in C:\Users\coca1805\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 78.632ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1235ms
[debug]     Load.loadUnit(file:/C:/Users/coca1805/.sbt/1.0/plugins/, ...) took 150.5151ms
[debug]   Load.apply: load took 289.5441ms
[debug]   Load.apply: resolveProjects took 6.8881ms
[debug]   Load.apply: finalTransforms took 54.666ms
[debug]   Load.apply: config.delegates took 14.6104ms
[debug]   Load.apply: Def.make(settings)... took 496.4835ms
[debug]   Load.apply: structureIndex took 106.7168ms
[debug]   Load.apply: mkStreams took 5.2436ms
[info] loading global plugins from C:\Users\coca1805\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2324.5218ms
[debug]           Load.loadUnit: plugins took 23.8057ms
[debug]           Load.loadUnit: defsScala took 0.0044ms
[debug] [Loading] Scanning directory C:\Users\coca1805\IdeaProjects\func-program-scala2\project
[debug]             Load.loadUnit: mkEval took 6.5075ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\coca1805\IdeaProjects\func-program-scala2\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.6947 ms
[info] loading settings for project func-program-scala2-build from idea2.sbt ...
[debug]               Load.resolveProject(func-program-scala2-build) took 3.025ms
[debug]             Load.loadTransitive: finalizeProject(Project(id func-program-scala2-build, base: C:\Users\coca1805\IdeaProjects\func-program-scala2\project, plugins: List(<none>))) took 5.2733ms
[debug] [Loading] Done in C:\Users\coca1805\IdeaProjects\func-program-scala2\project, returning: (func-program-scala2-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2339.327ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.5351ms
[debug]         Load.loadUnit(file:/C:/Users/coca1805/IdeaProjects/func-program-scala2/project/, ...) took 2370.8072ms
[debug]       Load.apply: load took 2373.1851ms
[debug]       Load.apply: resolveProjects took 0.0757ms
[debug]       Load.apply: finalTransforms took 8.7145ms
[debug]       Load.apply: config.delegates took 0.3968ms
[debug]       Load.apply: Def.make(settings)... took 62.2279ms
[debug]       Load.apply: structureIndex took 24.2734ms
[debug]       Load.apply: mkStreams took 0.002ms
[info] loading project definition from C:\Users\coca1805\IdeaProjects\func-program-scala2\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3519.535ms
[debug]     Load.loadUnit: defsScala took 0.0068ms
[debug] [Loading] Scanning directory C:\Users\coca1805\IdeaProjects\func-program-scala2
[debug]       Load.loadUnit: mkEval took 0.7298ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.531 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 179.894ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\coca1805\IdeaProjects\func-program-scala2, plugins: List(<none>))) took 186.3492ms
[debug] [Loading] Done in C:\Users\coca1805\IdeaProjects\func-program-scala2, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1226.7554ms
[debug]     Load.loadUnit: cleanEvalClasses took 12.196ms
[debug]   Load.loadUnit(file:/C:/Users/coca1805/IdeaProjects/func-program-scala2/, ...) took 4759.594ms
[debug] Load.apply: load took 4761.0369ms
[debug] Load.apply: resolveProjects took 0.0825ms
[debug] Load.apply: finalTransforms took 119.3386ms
[debug] Load.apply: config.delegates took 0.3494ms
[debug] Load.apply: Def.make(settings)... took 117.1132ms
[debug] Load.apply: structureIndex took 42.9957ms
[debug] Load.apply: mkStreams took 0.0028ms
[info] set current project to func-program-scala2 (in build file:/C:/Users/coca1805/IdeaProjects/func-program-scala2/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60963 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60963, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to func-program-scala2 (in build file:/C:/Users/coca1805/IdeaProjects/func-program-scala2/)
[debug] > Exec(idea-shell, None, None)
